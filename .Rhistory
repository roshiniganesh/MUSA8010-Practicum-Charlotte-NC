##print(map_plot_top_50_2022)
combined_plot <- bar_plot_top_50_2022 + map_plot_top_50_2022
print(combined_plot)
##print(map_plot_top_50)
##print(map_plot_top_50_2022)
##print(stacked_bar_plot)
##print(bar_plot_top_50_2022)
transit <- ggplot() +
geom_sf(data = dat2020, fill = "grey90", alpha = 0.5, color = NA) +
geom_sf(data = bus_routes, aes(color = "Bus Route"), size = 5, alpha = 0.5) +
geom_sf(data = blue_routes, aes(color = "Blue Line"), size = 8) +
geom_sf(data = blue_stops, aes(color = "Blue Line"), size = 2) +
geom_sf(data = gold_routes, aes(color = "Gold Line"), size = 8) +
geom_sf(data = gold_stops, aes(color = "Gold Line"), size = 2) +
geom_sf(data = silver_routes, aes(color = "Silver Line"), size = 8, linetype = "dashed") +
geom_sf(data = silver_stops, aes(color = "Silver Line"), size = 2, shape = 21) +
geom_sf(data = red_routes, aes(color = "Red Line"), size = 8, linetype = "dashed") +
geom_sf(data = red_stops, aes(color = "Red Line"), size = 2, shape = 21) +
labs(title = "Existing and Proposed Transit Lines and Stops") +
scale_color_manual(name = "Lines",
values = c("Bus Route" = "darkgrey",
"Blue Line" = "#4682B4",
"Gold Line" = "#FFD700",
"Silver Line" = "purple",
"Red Line" = "#FF6347"),
labels = c("Blue Line","Bus Routes", "Gold Line", "Proposed Red Line", "Proposed Silver Line")) +
mapTheme()
print(transit)
A <- ggplot() + geom_sf(data = dat2020, fill = "grey90", alpha = 0.5, color = NA) +
geom_sf(data = bus_routes, color = "darkgrey", size = 5, alpha = 0.5) +
geom_sf(data = school, color = "darkgrey", size = .5, alpha = 0.3) +
stat_density2d(data = data.frame(st_coordinates(school.sf)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_gradient(low = "grey", high = "#FFE6A7", name = "Density") +
scale_alpha(range = c(0.00, 0.1), guide = "none") +
labs(title = "Density of Schools") +
mapTheme()
B <- ggplot() + geom_sf(data = dat2020, fill = "grey90", alpha = 0.5, color = NA) +
geom_sf(data = bus_routes, color = "darkgrey", size = 5, alpha = 0.5) +
geom_sf(data = parks, color = "darkgrey", size = .5, alpha = 0.5) +
stat_density2d(data = data.frame(st_coordinates(parks.sf)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_gradient(low = "grey", high = "#7ACFD3", name = "Density") +
scale_alpha(range = c(0.00, 0.1), guide = "none") +
labs(title = "Density of Parks") +
mapTheme()
C <- ggplot() + geom_sf(data = dat2020, fill = "grey90", alpha = 0.5, color = NA) +
geom_sf(data = bus_routes, color = "darkgrey", size = 5, alpha = 0.5) +
geom_sf(data = groceries, color = "darkgrey", size = .5, alpha = 0.5) +
stat_density2d(data = data.frame(st_coordinates(groceries.sf)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_gradient(low = "grey", high = "#FFAB00", name = "Density") +
scale_alpha(range = c(0.00, 0.1), guide = "none") +
labs(title = "Density of Grocery Stores") +
mapTheme()
D <- ggplot() + geom_sf(data = dat2020, fill = "grey90", alpha = 0.5, color = NA) +
geom_sf(data = bus_routes, color = "darkgrey", size = 5, alpha = 0.5) +
geom_sf(data = policeoffice, color = "darkgrey", size = .5, alpha = 0.5) +
stat_density2d(data = data.frame(st_coordinates(policeoffice.sf)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_gradient(low = "grey", high = "#0077B6", name = "Density") +
scale_alpha(range = c(0.00, 0.1), guide = "none") +
labs(title = "Density of Police Offices") +
mapTheme()
E <- ggplot() + geom_sf(data = dat2020, fill = "grey90", alpha = 0.5, color = NA) +
geom_sf(data = bus_routes, color = "darkgrey", size = 5, alpha = 0.5) +
geom_sf(data = shoppingcen, color = "darkgrey", size = .5, alpha = 0.5) +
stat_density2d(data = data.frame(st_coordinates(shoppingcen.sf)),
aes(X, Y, fill = ..level.., alpha = ..level..),
size = 0.01, bins = 40, geom = 'polygon') +
scale_fill_gradient(low = "grey", high = "#FF6662", name = "Density") +
scale_alpha(range = c(0.00, 0.1), guide = "none") +
labs(title = "Density of Shopping Centers") +
mapTheme()
combined_maps <- A + B + C + D + E
#combined_maps <- combined_maps / plot_layout(nrow = 2, ncol = 3)
print(combined_maps)
a <- ggplot(allTracts, aes(x = as.factor(year), y = TotalPop, fill = as.factor(year))) +
geom_bar(stat = "identity", color = "transparent") +
labs(title = "Total Population: 2017-2022", x = "Year", y = "Total Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(plot.title = element_text(size = 6)) +
scale_fill_manual(values = palettebase7)
b <- ggplot(allTracts, aes(x = as.factor(year), y = TotalWorker, fill = as.factor(year))) +
geom_bar(stat = "identity", color = "transparent") +
labs(title = "Population of Worker: 2017-2022", x = "Year", y = "Total Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(plot.title = element_text(size = 6)) +
scale_fill_manual(values = palettebase7)
c <- ggplot(allTracts, aes(x = as.factor(year), y = Workfromhome, fill = as.factor(year))) +
geom_bar(stat = "identity", color = "transparent") +
labs(title = "Population of Work from Home: 2017-2022", x = "Year", y = "Total Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(plot.title = element_text(size = 6)) +
scale_fill_manual(values = palettebase7)
d <- ggplot(allTracts, aes(x = as.factor(year), y = Workwithbus, fill = as.factor(year))) +
geom_bar(stat = "identity", color = "transparent") +
labs(title = "Population of People Using Bus as Transportation to Work: 2017-2022", x = "Year", y = "Total Population") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
theme(legend.position = "none") +
theme(plot.title = element_text(size = 6)) +
scale_fill_manual(values = palettebase7)
combined_plot <- grid.arrange(a,b,c,d, ncol = 4, top = c(2, 2))
print(combined_plot)
allTracts$year <- as.numeric(allTracts$year)
average_pct_bus <- allTracts %>%
group_by(year) %>%
summarise(avg_pct_bus = mean(pctworkwithbus))
ggplot(average_pct_bus, aes(x = year, y = avg_pct_bus)) +
geom_line(color = "black",linewidth=1.5) +
geom_point(color = "red",size=3) +
labs(x = "Year",
y = "Average Percentage of Population Commuting with Bus",
title = "Trend of Commuting by Bus from 2017 to 2022") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal()
average_pct_car <- allTracts %>%
group_by(year) %>%
summarise(avg_pct_car = mean(pctworkbycar))
ggplot(average_pct_car, aes(x = year, y = avg_pct_car)) +
geom_line(color = "black",linewidth=1.5) +
geom_point(color = "red",size=3) +
labs(x = "Year",
y = "Average Percentage of Population Commuting by Car",
title = "Trend of Commuting by Car from 2017 to 2022") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal()
average_pct_taxi <- allTracts %>%
group_by(year) %>%
summarise(avg_pct_taxi = mean(pctworkbytaxi))
ggplot(average_pct_taxi, aes(x = year, y = avg_pct_taxi)) +
geom_line(color = "black",linewidth=1.5) +
geom_point(color = "red",size=3) +
labs(x = "Year",
y = "Average Percentage of Population Commuting by Taxi",
title = "Trend of Commuting by Taxi from 2017 to 2022") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
theme_minimal()
average_pct_motor <- allTracts %>%
group_by(year) %>%
summarise(avg_pct_motor = mean(pctworkbymotor))
ggplot(average_pct_motor, aes(x = year, y = avg_pct_motor)) +
geom_line(color = "black",linewidth=1.5) +
geom_point(color = "red",size=3) +
labs(x = "Year",
y = "Average Percentage of Population Commuting with Motorcycle",
title = "Trend of Commuting by Motorcycle from 2017 to 2022") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
theme_minimal()
average_pct_bike <- allTracts %>%
group_by(year) %>%
summarise(avg_pct_bike = mean(pctworkbybike))
ggplot(average_pct_bike, aes(x = year, y = avg_pct_bike)) +
geom_line(color = "black",linewidth=1.5) +
geom_point(color = "red",size=3) +
labs(x = "Year",
y = "Average Percentage of Population Commuting by Bike",
title = "Trend of Commuting by Bike from 2017 to 2022") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.01)) +
theme_minimal()
average_pct_walk <- allTracts %>%
group_by(year) %>%
summarise(avg_pct_walk = mean(pctworkbywalk))
ggplot(average_pct_walk, aes(x = year, y = avg_pct_walk)) +
geom_line(color = "black",linewidth=1.5) +
geom_point(color = "red",size=3) +
labs(x = "Year",
y = "Average Percentage of Population Commuting by Walk",
title = "Trend of Commuting by Walk from 2017 to 2022") +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal()
tp_vars2 <- c("TotalPop", "TotalWorker", "Workwithbus", "Workfromhome" )
tp_titles2 <- c("Total Population ", "Total Population of Worker", "Total Population Commute with Bus", "Total Population Work from Home ")
mapList2 <- list()
j2 <- 1
for(i in tp_vars2){
map2 <- ggplot() +
geom_sf(data = dat2017,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles2[j2], caption = paste0("Figure ", as.character(j2))) +
mapTheme()
mapList2[[i]] <- map2
j2<-j2+1
}
do.call(grid.arrange,c(mapList2, ncol=2, top="Demography of Mecklenburg County in 2017 (Census Tracts)"))
# plot 2018
mapList2 <- list()
j2 <- 1
for(i in tp_vars2){
map2 <- ggplot() +
geom_sf(data = dat2018,aes(fill = (!!sym(i))), crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles2[j2], caption = paste0("Figure ", as.character(j2))) +
mapTheme()
mapList2[[i]] <- map2
j2<-j2+1
}
do.call(grid.arrange,c(mapList2, ncol=2, top="Demography of Mecklenburg County in 2018 (Census Tracts)"))
# plot 2019
mapList2 <- list()
j2 <- 1
for(i in tp_vars2){
map2 <- ggplot() +
geom_sf(data = dat2019,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles2[j2], caption = paste0("Figure ", as.character(j2))) +
mapTheme()
mapList2[[i]] <- map2
j2<-j2+1
}
do.call(grid.arrange,c(mapList2, ncol=2, top="Demography of Mecklenburg County in 2019 (Census Tracts)"))
#plot 2020
mapList2 <- list()
j2 <- 1
for(i in tp_vars2){
map2 <- ggplot() +
geom_sf(data = dat2020,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles2[j2], caption = paste0("Figure ", as.character(j2))) +
mapTheme()
mapList2[[i]] <- map2
j2<-j2+1
}
do.call(grid.arrange,c(mapList2, ncol=2, top="Demography of Mecklenburg County in 2020 (Census Tracts)"))
#plot 2021
mapList2 <- list()
j2 <- 1
for(i in tp_vars2){
map2 <- ggplot() +
geom_sf(data = dat2021,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles2[j2], caption = paste0("Figure ", as.character(j2))) +
mapTheme()
mapList2[[i]] <- map2
j2<-j2+1
}
do.call(grid.arrange,c(mapList2, ncol=2, top="Demography of Mecklenburg County in 2021 (Census Tracts)"))
#plot 2022
mapList2 <- list()
j2 <- 1
for(i in tp_vars2){
map2 <- ggplot() +
geom_sf(data = dat2022,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles2[j2], caption = paste0("Figure ", as.character(j2))) +
mapTheme()
mapList2[[i]] <- map2
j2<-j2+1
}
do.call(grid.arrange,c(mapList2, ncol=2, top="Demography of Mecklenburg County in 2022 (Census Tracts)"))
tp_vars <- c("pctworkwithbus", "pctnocar", "pct1car", "pct2car", "pct3car", "pct4car", "pct5car")
tp_titles <- c("Percent of Population Commute with Bus", "Percent of Household with No Car", "Percent of Household with 1 Car", "Percent of Household with 2 Cars", "Percent of Household with 3 Cars", "Percent of Household with 4 Cars", "Percent of Household with 5 or more Cars")
mapList <- list()
j <- 1
for(i in tp_vars){
map <- ggplot() +
geom_sf(data = dat2017,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles[j], caption = paste0("Figure ", as.character(j))) +
mapTheme()
mapList[[i]] <- map
j<-j+1
}
do.call(grid.arrange,c(mapList, ncol=2, top="Commute by Bus and Car Ownership of Mecklenburg County in 2017 (Census Tracts)"))
# plot 2018
mapList <- list()
j <- 1
for(i in tp_vars){
map <- ggplot() +
geom_sf(data = dat2018,aes(fill = (!!sym(i))), crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles[j], caption = paste0("Figure ", as.character(j))) +
mapTheme()
mapList[[i]] <- map
j<-j+1
}
do.call(grid.arrange,c(mapList, ncol=2, top="Commute by Bus and Car Ownership of Mecklenburg County in 2018 (Census Tracts)"))
# plot 2019
mapList <- list()
j <- 1
for(i in tp_vars){
map <- ggplot() +
geom_sf(data = dat2019,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles[j], caption = paste0("Figure ", as.character(j))) +
mapTheme()
mapList[[i]] <- map
j<-j+1
}
do.call(grid.arrange,c(mapList, ncol=2, top="Commute by Bus and Car Ownership of Mecklenburg County in 2019 (Census Tracts)"))
#plot 2020
mapList <- list()
j <- 1
for(i in tp_vars){
map <- ggplot() +
geom_sf(data = dat2020,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles[j], caption = paste0("Figure ", as.character(j))) +
mapTheme()
mapList[[i]] <- map
j<-j+1
}
do.call(grid.arrange,c(mapList, ncol=2, top="Commute by Bus and Car Ownership of Mecklenburg County in 2020 (Census Tracts)"))
#plot 2021
mapList <- list()
j <- 1
for(i in tp_vars){
map <- ggplot() +
geom_sf(data = dat2021,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles[j], caption = paste0("Figure ", as.character(j))) +
mapTheme()
mapList[[i]] <- map
j<-j+1
}
do.call(grid.arrange,c(mapList, ncol=2, top="Commute by Bus and Car Ownership of Mecklenburg County in 2021 (Census Tracts)"))
#plot 2022
mapList <- list()
j <- 1
for(i in tp_vars){
map <- ggplot() +
geom_sf(data = dat2022,aes(fill = (!!sym(i))),crs = st_crs("EPSG:4326")) +
scale_fill_gradient(low = "#edf8fb", high = "#005357") +
geom_sf(data=bus_routes, color = "#FFBD37", size = 0.5,alpha = 0.5)+
labs(title = tp_titles[j], caption = paste0("Figure ", as.character(j))) +
mapTheme()
mapList[[i]] <- map
j<-j+1
}
do.call(grid.arrange,c(mapList, ncol=2, top="Commute by Bus and Car Ownership of Mecklenburg County in 2022 (Census Tracts)"))
car_vars <- c("pctnocar", "pct1car", "pct2car", "pct3car", "pct4car", "pct5car")
car_titles <- c("Percent of Household with No Car", "Percent of Household with 1 Car", "Percent of Household with 2 Cars", "Percent of Household with 3 Cars", "Percent of Household with 4 Cars", "Percent of Household with 5 or more Cars")
# hist 2017
histList <- list()
j <- 1
for (i in car_vars) {
hist <- ggplot(data = dat2017, aes(x = !!sym(i))) +
geom_histogram(fill = "#edf8fb", color = "black") +  # Set initial color to black (can be any color)
labs(title = car_titles[j], caption = paste0("Figure ", as.character(j))) +
theme_minimal() +
scale_fill_manual(values = palettebase7)  # Using scale_fill_manual to specify colors
histList[[i]] <- hist
j <- j + 1
}
do.call(grid.arrange,c(histList, ncol=2, top="Histogram of Car Ownership of Mecklenburg County in 2017"))
# hist 2018
histList <- list()
j <- 1
for (i in car_vars) {
hist <- ggplot(data = dat2017, aes(x = !!sym(i))) +
geom_histogram(fill = "#edf8fb", color = "black") +  # Set initial color to black (can be any color)
labs(title = car_titles[j], caption = paste0("Figure ", as.character(j))) +
theme_minimal() +
scale_fill_manual(values = palettebase7)  # Using scale_fill_manual to specify colors
histList[[i]] <- hist
j <- j + 1
}
do.call(grid.arrange,c(histList, ncol=2, top="Histogram of Car Ownership of Mecklenburg County in 2018"))
# hist 2019
histList <- list()
j <- 1
for (i in car_vars) {
hist <- ggplot(data = dat2017, aes(x = !!sym(i))) +
geom_histogram(fill = "#edf8fb", color = "black") +  # Set initial color to black (can be any color)
labs(title = car_titles[j], caption = paste0("Figure ", as.character(j))) +
theme_minimal() +
scale_fill_manual(values = palettebase7)  # Using scale_fill_manual to specify colors
histList[[i]] <- hist
j <- j + 1
}
do.call(grid.arrange,c(histList, ncol=2, top="Histogram of Car Ownership of Mecklenburg County in 2019"))
# hist 2020
histList <- list()
j <- 1
for (i in car_vars) {
hist <- ggplot(data = dat2017, aes(x = !!sym(i))) +
geom_histogram(fill = "#edf8fb", color = "black") +  # Set initial color to black (can be any color)
labs(title = car_titles[j], caption = paste0("Figure ", as.character(j))) +
theme_minimal() +
scale_fill_manual(values = palettebase7)  # Using scale_fill_manual to specify colors
histList[[i]] <- hist
j <- j + 1
}
do.call(grid.arrange,c(histList, ncol=2, top="Histogram of Car Ownership of Mecklenburg County in 2020"))
# hist 2021
histList <- list()
j <- 1
for (i in car_vars) {
hist <- ggplot(data = dat2017, aes(x = !!sym(i))) +
geom_histogram(fill = "#edf8fb", color = "black") +  # Set initial color to black (can be any color)
labs(title = car_titles[j], caption = paste0("Figure ", as.character(j))) +
theme_minimal() +
scale_fill_manual(values = palettebase7)  # Using scale_fill_manual to specify colors
histList[[i]] <- hist
j <- j + 1
}
do.call(grid.arrange,c(histList, ncol=2, top="Histogram of Car Ownership of Mecklenburg County in 2021"))
# hist 2022
histList <- list()
j <- 1
for (i in car_vars) {
hist <- ggplot(data = dat2017, aes(x = !!sym(i))) +
geom_histogram(fill = "#edf8fb", color = "black") +  # Set initial color to black (can be any color)
labs(title = car_titles[j], caption = paste0("Figure ", as.character(j))) +
theme_minimal() +
scale_fill_manual(values = palettebase7)  # Using scale_fill_manual to specify colors
histList[[i]] <- hist
j <- j + 1
}
do.call(grid.arrange,c(histList, ncol=2, top="Histogram of Car Ownership of Mecklenburg County in 2022"))
average_pct_cars <- allTracts %>%
group_by(year) %>%
summarise(avg_pct_0cars = mean(pctnocar),
avg_pct_1cars = mean(pct1car),
avg_pct_2cars = mean(pct2car),
avg_pct_3cars = mean(pct3car),
avg_pct_4cars = mean(pct4car),
avg_pct_5ormore_cars = mean(pct5car))
average_pct_cars_long <- pivot_longer(average_pct_cars,
cols = starts_with("avg_pct"),
names_to = "Cars",
values_to = "Percentage")
plot_list <- list()
for (i in unique(average_pct_cars_long$Cars)) {
num_cars <- gsub("avg_pct_", "", i)
num_cars <- gsub("cars", "car", num_cars)
subset_data <- subset(average_pct_cars_long, Cars == i)
plot <- ggplot(subset_data, aes(x = year, y = Percentage, group = 1)) +
geom_line(color = "black",linewidth=1.5) +
geom_point(color = "red",size=3) +
labs(x = "Year",
y = "Average Percentage of Households",
title = paste("Trend of Car Ownership:", num_cars)) +
scale_y_continuous(labels = scales::percent_format(accuracy = 0.1)) +
theme_minimal()
plot_list[[i]] <- plot
}
grid.arrange(grobs = plot_list, ncol = 2, top = "Trend of Car Ownership (2017-2022)")
# Perform spatial join based on containment (bus stops within census tracts)
joined_data <- st_join(busstop_sf, allTracts_sf, join = st_within)
# Spatial join based on containment (bus stops within census tracts)
if (st_crs(busstop_sf) != st_crs(allTracts_sf)) {
busstop_sf <- st_transform(busstop_sf, crs = st_crs(allTracts_sf))
}
# Spatial join
joined_data <- st_join(busstop_sf, allTracts_sf, join = st_within)
# Separate dataset
data_2017 <- filter(joined_data, Year == 2017 & year == 2017)
data_2018 <- filter(joined_data, Year == 2018 & year == 2018)
data_2019 <- filter(joined_data, Year == 2019 & year == 2019)
data_2020 <- filter(joined_data, Year == 2020 & year == 2020)
data_2021 <- filter(joined_data, Year == 2021 & year == 2021)
data_2022 <- filter(joined_data, Year == 2022 & year == 2022)
# Save csv
write.csv(data_2017, "data_2017.csv", row.names = FALSE)
write.csv(data_2018, "data_2018.csv", row.names = FALSE)
write.csv(data_2019, "data_2019.csv", row.names = FALSE)
write.csv(data_2020, "data_2020.csv", row.names = FALSE)
write.csv(data_2021, "data_2021.csv", row.names = FALSE)
write.csv(data_2022, "data_2022.csv", row.names = FALSE)
joined_data$school.Buffer <- joined_data %>%
st_buffer(660) %>%
aggregate(mutate(school.sf, counter = 1),., sum) %>%
pull(counter)
joined_data$policeoffice.Buffer <- joined_data %>%
st_buffer(660) %>%
aggregate(mutate(policeoffice.sf, counter = 1),., sum) %>%
pull(counter)
#data_2022$busstop.Buffer <- data_2022 %>%
#    st_buffer(660) %>%
#    aggregate(mutate(busstop_sf, counter = 1),., sum) %>%
#    pull(counter)
joined_data <-
joined_data %>%
mutate(
school_nn1 = nn_function(st_coordinates(joined_data),
st_coordinates(school.sf), k = 1),
school_nn2 = nn_function(st_coordinates(joined_data),
st_coordinates(school.sf), k = 2),
school_nn3 = nn_function(st_coordinates(joined_data),
st_coordinates(school.sf), k = 3),
school_nn4 = nn_function(st_coordinates(joined_data),
st_coordinates(school.sf), k = 4),
school_nn5 = nn_function(st_coordinates(joined_data),
st_coordinates(school.sf), k = 5))
data_2022 <-
data_2022 %>%
mutate(
policeoffice_nn1 = nn_function(st_coordinates(data_2022),
st_coordinates(policeoffice.sf), k = 1),
