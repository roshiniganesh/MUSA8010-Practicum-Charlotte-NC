#aggregate to the fishnet
thisFishnet <-
aggregate(thesePoints, theFishnet, length) %>%
mutate(!!varName := ifelse(is.na(.[[1]]),0,1))
#add to the larger fishnet
theseFishnets <- cbind(theseFishnets,thisFishnet)
}
#output all aggregates as one large fishnet
return(theseFishnets)
}
theRasterList <- c(developed,forest,farm,wetlands,otherUndeveloped,water)
aggregatedRasters <-
aggregateRaster(theRasterList, houstonMSA_fishnet) %>%
dplyr::select(developed,forest,farm,wetlands,otherUndeveloped,water) %>%
mutate_if(is.numeric,as.factor)
aggregatedRasters %>%
gather(var,value,developed:water) %>%
st_cast("POLYGON") %>%    #just to make sure no weird geometries slipped in
mutate(X = xyC(.)$x,
Y = xyC(.)$y) %>%
ggplot() +
geom_sf(data=houstonMSA) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = palette2,
labels=c("Other","Land Cover"),
name = "") +
labs(title = "Land Cover Types, 2001",
subtitle = "As fishnet centroids") +
mapTheme
census_key <- read.table("~/GitHub/census_key.txt", quote="\"", comment.char="")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
#library(QuantPsyc) # JE Note: in R 4.1, QuantPsyc package not available.
library(caret)
library(yardstick)
library(pscl)
library(plotROC)
library(ggrepel)
library(pROC)
library(grid)
library(gridExtra)
library(viridis)
library(igraph)
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
palette2 <- c("#41b6c4","#253494")
palette4 <- c("#a1dab4","#41b6c4","#2c7fb8","#253494")
palette5 <- c("#ffffcc","#a1dab4","#41b6c4","#2c7fb8","#253494")
palette10 <- c("#f7fcf0","#e0f3db","#ccebc5","#a8ddb5","#7bccc4",
"#4eb3d3","#2b8cbe","#0868ac","#084081","#f7fcf0")
#this function converts a column in to quintiles. It is used for mapping.
quintileBreaks <- function(df,variable) {
as.character(quantile(df[[variable]],
c(.01,.2,.4,.6,.8),na.rm=T))
}
#This function can be used to convert a polygon sf to centroids xy coords.
xyC <- function(aPolygonSF) {
as.data.frame(
cbind(x=st_coordinates(st_centroid(aPolygonSF))[,1],
y=st_coordinates(st_centroid(aPolygonSF))[,2]))
}
#this function convert a raster to a data frame so it can be plotted in ggplot
rast <- function(inRaster) {
data.frame(
xyFromCell(inRaster, 1:ncell(inRaster)),
value = getValues(inRaster)) }
houstonMSA <-
st_read("https://raw.githubusercontent.com/mafichman/CPLN_675/main/Week_14_15/data/UGB_Chapter_data/houston_MSA.geojson") %>%
st_transform('ESRI:102741') # JE Note: added 'ESRI:' in front of projection
lc_change = raster("https://github.com/mafichman/CPLN_675/raw/main/Week_14_15/data/UGB_Chapter_data/resam4k.tif")
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
reclassMatrix <-
matrix(c(
0,12,0,
12,24,1,
24,Inf,0),
ncol=3, byrow=T)
reclassMatrix
lc_change2 <-
reclassify(lc_change,reclassMatrix)
lc_change2[lc_change2 < 1] <- NA
names(lc_change2) <- "lc_change"
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change2) %>% na.omit,
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE, name ="Land Cover\nChange") +
labs(title="Development Land Use Change") +
mapTheme
houstonMSA_fishnet <-
st_make_grid(houstonMSA, 4000) %>%
st_sf()
houstonMSA_fishnet <-
houstonMSA_fishnet[houstonMSA,]
ggplot() +
geom_sf(data=houstonMSA_fishnet) +
labs(title="Fishnet, 4000 Foot Resolution") +
mapTheme
changePoints <-
rasterToPoints(lc_change2) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(houstonMSA_fishnet))
fishnet <-
aggregate(changePoints, houstonMSA_fishnet, sum) %>%
mutate(lc_change = ifelse(is.na(lc_change),0,1),
lc_change = as.factor(lc_change))
ggplot() +
geom_sf(data=houstonMSA) +
geom_point(data=fishnet,
aes(x=xyC(fishnet)$x, y=xyC(fishnet)$y, colour=lc_change)) +
scale_colour_manual(values = palette2,
labels=c("No Change","New Development"),
name = "") +
labs(title = "Land Cover Development Change", subtitle = "As fishnet centroids") +
mapTheme
lc_2001 <- raster("https://github.com/mafichman/CPLN_675/raw/main/Week_14_15/data/UGB_Chapter_data/lc_2001_4k.tif")
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_2001) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(discrete=TRUE, name ="") +
labs(title = "Land Cover, 2001") +
mapTheme +
theme(legend.direction="horizontal")
developed <- lc_2001 == 21 | lc_2001 == 22 | lc_2001 == 23 | lc_2001 == 24
forest <- lc_2001 == 41 | lc_2001 == 42 | lc_2001 == 43
farm <- lc_2001 == 81 | lc_2001 == 82
wetlands <- lc_2001 == 90 | lc_2001 == 95
otherUndeveloped <- lc_2001 == 52 | lc_2001 == 71 | lc_2001 == 31
water <- lc_2001 == 11
names(developed) <- "developed"
names(forest) <- "forest"
names(farm) <- "farm"
names(wetlands) <- "wetlands"
names(otherUndeveloped) <- "otherUndeveloped"
names(water) <- "water"
aggregateRaster <- function(inputRasterList, theFishnet) {
#create an empty fishnet with the same dimensions as the input fishnet
theseFishnets <- theFishnet %>% dplyr::select()
#for each raster in the raster list
for (i in inputRasterList) {
#create a variable name corresponding to the ith raster
varName <- names(i)
#convert raster to points as an sf
thesePoints <-
rasterToPoints(i) %>%
as.data.frame() %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(theFishnet)) %>%
filter(.[[1]] == 1)
#aggregate to the fishnet
thisFishnet <-
aggregate(thesePoints, theFishnet, length) %>%
mutate(!!varName := ifelse(is.na(.[[1]]),0,1))
#add to the larger fishnet
theseFishnets <- cbind(theseFishnets,thisFishnet)
}
#output all aggregates as one large fishnet
return(theseFishnets)
}
theRasterList <- c(developed,forest,farm,wetlands,otherUndeveloped,water)
aggregatedRasters <-
aggregateRaster(theRasterList, houstonMSA_fishnet) %>%
dplyr::select(developed,forest,farm,wetlands,otherUndeveloped,water) %>%
mutate_if(is.numeric,as.factor)
aggregatedRasters %>%
gather(var,value,developed:water) %>%
st_cast("POLYGON") %>%    #just to make sure no weird geometries slipped in
mutate(X = xyC(.)$x,
Y = xyC(.)$y) %>%
ggplot() +
geom_sf(data=houstonMSA) +
geom_point(aes(X,Y, colour=as.factor(value))) +
facet_wrap(~var) +
scale_colour_manual(values = palette2,
labels=c("Other","Land Cover"),
name = "") +
labs(title = "Land Cover Types, 2001",
subtitle = "As fishnet centroids") +
mapTheme
houstonPop00 <-
get_decennial(geography = "tract", variables = "P001001", year = 2000,
state = 48, geometry = TRUE,
county=c("Harris COunty","San Jacinto","Montgomery","Liberty","Waller",
"Austin","Chambers","Fort Bend","Brazoria","Galveston")) %>%
rename(pop_2000 = value) %>%
st_transform(st_crs(houstonMSA_fishnet))
houstonPop10 <-
get_decennial(geography = "tract", variables = "P001001", year = 2010,
state = 48, geometry = TRUE,
county=c("Harris COunty","San Jacinto","Montgomery","Liberty","Waller",
"Austin","Chambers","Fort Bend","Brazoria","Galveston")) %>%
rename(pop_2010 = value) %>%
st_transform(st_crs(houstonMSA_fishnet)) %>%
st_buffer(-1)
grid.arrange(
ggplot() +
geom_sf(data = houstonPop00, aes(fill=factor(ntile(pop_2000,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(houstonPop00,"pop_2000"),
name="Quintile\nBreaks") +
labs(title="Population, Houston MSA: 2000") +
mapTheme,
ggplot() +
geom_sf(data = houstonPop10, aes(fill=factor(ntile(pop_2010,5))), colour=NA) +
scale_fill_manual(values = palette5,
labels=quintileBreaks(houstonPop10,"pop_2010"),
name="Quintile\nBreaks") +
labs(title="Population, Houston MSA: 2010") +
mapTheme, ncol=2)
houstonMSA_fishnet <-
houstonMSA_fishnet %>%
rownames_to_column("fishnetID") %>%
mutate(fishnetID = as.numeric(fishnetID)) %>%
dplyr::select(fishnetID)
fishnetPopulation00 <-
st_interpolate_aw(houstonPop00["pop_2000"], houstonMSA_fishnet, extensive=TRUE) %>%
as.data.frame(.) %>%
rownames_to_column(var = "fishnetID") %>%
left_join(houstonMSA_fishnet %>%
mutate(fishnetID = as.character(fishnetID)),
., by=c("fishnetID"='fishnetID')) %>%
mutate(pop_2000 = replace_na(pop_2000,0)) %>%
dplyr::select(pop_2000)
fishnetPopulation10 <-
st_interpolate_aw(houstonPop10["pop_2010"],houstonMSA_fishnet, extensive=TRUE) %>%
as.data.frame(.) %>%
rownames_to_column(var = "fishnetID") %>%
left_join(houstonMSA_fishnet %>%
mutate(fishnetID = as.character(fishnetID)),
., by=c("fishnetID"='fishnetID')) %>%
mutate(pop_2010 = replace_na(pop_2010,0)) %>%
dplyr::select(pop_2010)
fishnetPopulation <-
cbind(fishnetPopulation00,fishnetPopulation10) %>%
dplyr::select(pop_2000,pop_2010) %>%
mutate(pop_Change = pop_2010 - pop_2000)
grid.arrange(
ggplot() +
geom_sf(data=houstonPop10, aes(fill=factor(ntile(pop_2010,5))),colour=NA) +
scale_fill_manual(values = palette5,
labels=substr(quintileBreaks(houstonPop10,"pop_2010"),1,4),
name="Quintile\nBreaks") +
labs(title="Population, Houston MSA: 2010",
subtitle="Represented as tracts; Boundaries omitted") +
mapTheme,
ggplot() +
geom_sf(data=fishnetPopulation, aes(fill=factor(ntile(pop_2010,5))),colour=NA) +
scale_fill_manual(values = palette5,
labels=substr(quintileBreaks(fishnetPopulation,"pop_2010"),1,4),
name="Quintile\nBreaks") +
labs(title="Population, Houston MSA: 2010",
subtitle="Represented as fishnet gridcells; Boundaries omitted") +
mapTheme, ncol=2)
houstonHighways <-
st_read("https://github.com/mafichman/CPLN_675/raw/main/Week_14_15/data/UGB_Chapter_data/houstonHighways.geojson") %>%
st_transform(st_crs(houstonMSA)) %>%
st_intersection(houstonMSA)
ggplot() +
geom_point(data=fishnet,
aes(x=xyC(fishnet)[,1], y=xyC(fishnet)[,2],colour=lc_change),size=1.5) +
geom_sf(data=houstonHighways) +
scale_colour_manual(values = palette2,
labels=c("No Change","New Development")) +
labs(title = "New Development and Highways",
subtitle = "As fishnet centroids") +
mapTheme
atlantaHighways <-
st_read("C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/Expressways_Atlanta_Region.geojson") %>%
st_transform(st_crs(atlantaMSA)) %>%
st_intersection(atlantaMSA)
library(sf)
library(tidycensus)
library(terra)
library(tidyverse)
library(tidyterra)
xyC <- function(aPolygonSF) {
as.data.frame(
cbind(x=st_coordinates(st_centroid(aPolygonSF))[,1],
y=st_coordinates(st_centroid(aPolygonSF))[,2]))
}
nn_function <- function(measureFrom,measureTo,k) {
#convert the sf layers to matrices
measureFrom_Matrix <-
as.matrix(measureFrom)
measureTo_Matrix <-
as.matrix(measureTo)
nn <-
get.knnx(measureTo, measureFrom, k)$nn.dist
output <-
as.data.frame(nn) %>%
rownames_to_column(var = "thisPoint") %>%
gather(points, point_distance, V1:ncol(.)) %>%
arrange(as.numeric(thisPoint)) %>%
group_by(thisPoint) %>%
summarize(pointDistance = mean(point_distance)) %>%
arrange(as.numeric(thisPoint)) %>%
dplyr::select(-thisPoint) %>%
pull()
return(output)
}
lc2011 <- rast('DATA/nlcd_2011.tif')
xyC <- function(aPolygonSF) {
as.data.frame(
cbind(x=st_coordinates(st_centroid(aPolygonSF))[,1],
y=st_coordinates(st_centroid(aPolygonSF))[,2]))
}
nn_function <- function(measureFrom,measureTo,k) {
#convert the sf layers to matrices
measureFrom_Matrix <-
as.matrix(measureFrom)
measureTo_Matrix <-
as.matrix(measureTo)
nn <-
get.knnx(measureTo, measureFrom, k)$nn.dist
output <-
as.data.frame(nn) %>%
rownames_to_column(var = "thisPoint") %>%
gather(points, point_distance, V1:ncol(.)) %>%
arrange(as.numeric(thisPoint)) %>%
group_by(thisPoint) %>%
summarize(pointDistance = mean(point_distance)) %>%
arrange(as.numeric(thisPoint)) %>%
dplyr::select(-thisPoint) %>%
pull()
return(output)
}
lc2011 <- rast('DATA/nlcd_2011.tif')
atl_msa <- st_read('https://arcgis.atlantaregional.com/arcgis/rest/services/OpenData/FeatureServer/67/query?outFields=*&where=1%3D1&f=geojson') %>%
st_make_valid() %>%
st_transform('EPSG:2240') %>%
dplyr::filter(MSA == 'Y')
atl_msa_dissolve <- st_union(atl_msa)
lc2011 <- rast('DATA/nlcd_2011.tif')
file.exists('DATA/nlcd_2011.tif')
file.exists('DATA/nlcd_2021.tif')
lc2011 <- rast('"C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2011.tif"')
lc2011 <- raster('"C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2011.tif"')
lc2011 <- raster('"C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2011.tif"')
library(raster)
lc2011 <- raster('"C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2011.tif"')
lc2011 <- raster("C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2011.tif")
lc2011 <- project(lc2011,'EPSG:2240')
library(terra)
lc2011 <- raster("C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2011.tif")
lc2011 <- project(lc2011,'EPSG:2240')
lc2011 <- raster("C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2011.tif")
lc2011 <- projectRaster(lc2011,'EPSG:2240')
lc2011 <- raster("C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2011.tif")
lc2011 <- projectRaster(lc2011, crs = "+init=EPSG:2240")
lc2011 <- terra::mask(lc2011,atlantaMSA)
lc2021 <- raster("C:/Users/jonat/Documents/CPLN675/CPLN6750_Final/DATA/nlcd_2021.tif")
lc2011 <- projectRaster(lc2011, crs = "+init=EPSG:2240")
lc2021 <- terra::mask(lc2021,atlantaMSA)
reclassMatrix <-
matrix(c(
0,12,0,
12,24,1,
24,Inf,0),
ncol=3, byrow=T)
developed_2011 <- classify(lc2011,reclassMatrix)
library(raster)
reclassMatrix <-
matrix(c(
0,12,0,
12,24,1,
24,Inf,0),
ncol=3, byrow=T)
developed_2011 <- classify(lc2011,reclassMatrix)
reclassMatrix <-
matrix(c(
0,12,0,
12,24,1,
24,Inf,0),
ncol=3, byrow=T)
developed_2011 <- reclassify(lc2011,reclassMatrix)
developed_2021 <- reclassify(lc2021,reclassMatrix)
development_change <- developed_2011+developed_2021
plot(developed_2011)
plot(developed_2021)
plot(developed_2021)
reclassMatrix <-
matrix(c(
0,12,0,
12,24,1,
24,Inf,0),
ncol=3, byrow=T)
developed_2011 <- reclassify(lc2011,reclassMatrix)
developed_2021 <- reclassify(lc2021,reclassMatrix)
development_change <- developed_2011+developed_2021
lc2011 <- projectRaster(lc2011, crs = "+init=EPSG:2240")
lc2021 <- terra::mask(lc2021,atlantaMSA)
reclassMatrix <-
matrix(c(
0,12,0,
12,24,1,
24,Inf,0),
ncol=3, byrow=T)
developed_2011 <- reclassify(lc2011,reclassMatrix)
developed_2021 <- reclassify(lc2021,reclassMatrix)
development_change <- developed_2011+developed_2021
crs_info <- crs(developed_2021)
# Print the CRS information
print(crs_info)
crs_info <- crs(developed_2011)
# Print the CRS information
print(crs_info)
developed_2021_proj <- projectRaster(developed_2021, crs = crs(developed_2011))
development_change <- developed_2011 + developed_2021_proj
reclass2 <- matrix(c(0,0,
1,1,
2,0),ncol=2,byrow=T)
development_change <- reclassify(development_change,reclass2)
levels(development_change) <- c('No_Change','Change')
View(developed_2011)
View(developed_2021)
development_change <- developed_2021_proj + developed_2011
development_change <-
reclassify(development_change,reclassMatrix)
development_change2[development_change2 < 1] <- NA
development_change <-
reclassify(development_change,reclassMatrix)
ggplot() +
geom_sf(data=houstonMSA) +
geom_raster(data=rast(lc_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
development_change <-
reclassify(development_change,reclassMatrix)
ggplot() +
geom_sf(data=atlantaMSA) +
geom_raster(data=rast(development_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
library(tidyverse)
library(sf)
library(raster)
library(knitr)
library(kableExtra)
library(tidycensus)
library(tigris)
library(FNN)
#library(QuantPsyc) # JE Note: in R 4.1, QuantPsyc package not available.
library(caret)
library(yardstick)
library(pscl)
library(plotROC)
library(ggrepel)
library(pROC)
library(grid)
library(gridExtra)
library(viridis)
library(igraph)
library(ggplot2)
development_change <-
reclassify(development_change,reclassMatrix)
ggplot() +
geom_sf(data=atlantaMSA) +
geom_raster(data=rast(development_change) %>% na.omit %>% filter(value > 0),
aes(x,y,fill=as.factor(value))) +
scale_fill_viridis(direction = -1, discrete=TRUE, name ="Land Cover\nChange") +
labs(title = "Land Cover Change, 2000-2010") +
mapTheme +
theme(legend.direction="horizontal")
